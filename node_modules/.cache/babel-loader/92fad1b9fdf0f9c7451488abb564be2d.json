{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\AluraFlix-ONE\\\\src\\\\pages\\\\cadastro\\\\Categoria\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport PageDefault from '../../../components/PageDefault';\nimport { Link } from 'react-router-dom';\nimport FormField from '../../../components/Carousel/components/FormField';\nimport Button from '../../../components/Button';\nimport useForm from '../../../hooks/useForm';\n\nfunction CadastroCategoria() {\n  const valoresIniciais = {\n    nome: '',\n    descricao: '',\n    cor: ''\n  };\n  const {\n    handleChange,\n    values,\n    clearForm\n  } = useForm(valoresIniciais);\n  const [categorias, setCategorias] = useState([]);\n  useEffect(() => {\n    if (window.location.href.includes('localhost')) {\n      const URL = 'http://localhost:8080/categorias';\n      fetch(URL).then(async respostaDoServer => {\n        if (respostaDoServer.ok) {\n          const resposta = await respostaDoServer.json();\n          setCategorias(resposta);\n          return;\n        }\n\n        throw new Error('Não foi possível pegar os dados');\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(PageDefault, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Cadastro de Categoria: \", values.nome), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: function handleSubmit(infosDoEvento) {\n      infosDoEvento.preventDefault();\n      setCategorias([...categorias, values]);\n      clearForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"Nome da Categoria\",\n    type: \"text\",\n    name: \"nome\",\n    value: values.nome,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormField, {\n    label: \"Descri\\xE7\\xE3o\",\n    type: \"textarea\",\n    name: \"descricao\",\n    value: values.descricao,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormField, {\n    label: \"Cor\",\n    type: \"color\",\n    name: \"cor\",\n    value: values.cor,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Cadastrar\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, categorias.map(categoria => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: categoria.titulo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, categoria.titulo);\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Ir para home\"));\n}\n\nexport default CadastroCategoria;","map":{"version":3,"sources":["C:/Users/User/OneDrive/Área de Trabalho/AluraFlix-ONE/src/pages/cadastro/Categoria/index.js"],"names":["React","useState","useEffect","PageDefault","Link","FormField","Button","useForm","CadastroCategoria","valoresIniciais","nome","descricao","cor","handleChange","values","clearForm","categorias","setCategorias","window","location","href","includes","URL","fetch","then","respostaDoServer","ok","resposta","json","Error","handleSubmit","infosDoEvento","preventDefault","map","categoria","titulo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PageDefault from '../../../components/PageDefault';\r\nimport { Link } from 'react-router-dom';\r\nimport FormField from '../../../components/Carousel/components/FormField';\r\nimport Button from '../../../components/Button';\r\nimport useForm from '../../../hooks/useForm';\r\n\r\nfunction CadastroCategoria() {\r\n    const valoresIniciais = {\r\n        nome: '',\r\n        descricao: '',\r\n        cor: ''\r\n    }\r\n\r\n    const { handleChange, values, clearForm } = useForm(valoresIniciais);\r\n\r\n    const [categorias, setCategorias] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes('localhost')) {\r\n            const URL = 'http://localhost:8080/categorias';\r\n            fetch(URL)\r\n                .then(async (respostaDoServer) => {\r\n                    if (respostaDoServer.ok) {\r\n                        const resposta = await respostaDoServer.json();\r\n                        setCategorias(resposta);\r\n                        return;\r\n                    }\r\n                    throw new Error('Não foi possível pegar os dados');\r\n                })\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <PageDefault>\r\n            <h1>Cadastro de Categoria: {values.nome}</h1>\r\n\r\n            <form onSubmit={function handleSubmit(infosDoEvento) {\r\n                infosDoEvento.preventDefault();\r\n                setCategorias([...categorias, values]);\r\n                clearForm();\r\n            }}>\r\n                <FormField\r\n                    label=\"Nome da Categoria\"\r\n                    type=\"text\"\r\n                    name=\"nome\"\r\n                    value={values.nome}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <FormField\r\n                    label=\"Descrição\"\r\n                    type=\"textarea\"\r\n                    name=\"descricao\"\r\n                    value={values.descricao}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <FormField\r\n                    label=\"Cor\"\r\n                    type=\"color\"\r\n                    name=\"cor\"\r\n                    value={values.cor}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <Button>Cadastrar</Button>\r\n            </form>\r\n\r\n            <ul>\r\n                {categorias.map((categoria) => {\r\n                    return (\r\n                        <li key={categoria.titulo}>{categoria.titulo}</li>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n            <Link to=\"/\">\r\n                Ir para home\r\n            </Link>\r\n        </PageDefault>\r\n    )\r\n}\r\n\r\nexport default CadastroCategoria;"]},"metadata":{},"sourceType":"module"}